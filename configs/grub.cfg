# WC_ are wildcards that must be replaced:
#   EFI_GRUB
#   BOOT_UUID
#   LUKS_LVM_UUID
#   VG_NAME
#   SEC_ARCH_UUID
#

### BEGIN /etc/grub.d/00_header ###
insmod part_gpt
insmod part_msdos
if [ -s $prefix/grubenv ]; then
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="${saved_entry}"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if loadfont unicode ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_US
  insmod gettext
fi
terminal_input console
terminal_output gfxterm
insmod part_gpt
insmod fat
set root='WC_EFI_GRUB'
if [ x$feature_platform_search_hint = xy ]; then
  search --no-floppy --fs-uuid --set=root --hint-bios=WC_EFI_GRUB --hint-efi=WC_EFI_GRUB  WC_BOOT_UUID
else
  search --no-floppy --fs-uuid --set=root WC_BOOT_UUID
fi
insmod gfxmenu
loadfont ($root)/grub/themes/arch/din2014_regular_18.pf2
loadfont ($root)/grub/themes/arch/din2014_regular_20.pf2
loadfont ($root)/grub/themes/arch/din2014_regular_23.pf2
loadfont ($root)/grub/themes/arch/terminus-12.pf2
loadfont ($root)/grub/themes/arch/terminus-14.pf2
loadfont ($root)/grub/themes/arch/terminus-16.pf2
loadfont ($root)/grub/themes/arch/terminus-18.pf2
insmod png
set theme=($root)/grub/themes/arch/theme.txt
export theme
if [ x$feature_timeout_style = xy ] ; then
  set timeout_style=countdown
  set timeout=5
# Fallback hidden-timeout code in case the timeout_style feature is
# unavailable.
elif sleep --interruptible 5 ; then
  set timeout=0
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/10_linux ###
menuentry 'Arch Linux' --class arch --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-linux-advanced-26559992-fcc7-4cc4-a850-60961ea1994f' {
	savedefault
	load_video
	set gfxpayload=keep
	insmod gzio
	insmod part_gpt
	insmod fat
	set root='WC_EFI_GRUB'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=WC_EFI_GRUB --hint-efi=WC_EFI_GRUB  WC_BOOT_UUID
	else
	  search --no-floppy --fs-uuid --set=root WC_BOOT_UUID
	fi
	echo	'Loading Linux linux ...'
	linux	/vmlinuz-linux root=/dev/mapper/WC_VG_NAME-root rw rd.luks.name=WC_LUKS_LVM_UUID=root root=/dev/mapper/WC_VG_NAME-root loglevel=3
	echo	'Loading initial ramdisk ...'
	initrd	/initramfs-linux.img
}
menuentry 'Vault os' --class unknown --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-linux-lts-advanced-26559992-fcc7-4cc4-a850-60961ea1994f' {
	savedefault
	load_video
	set gfxpayload=keep
	insmod gzio
	insmod part_gpt
	insmod fat
	set root='WC_EFI_GRUB'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=WC_EFI_GRUB --hint-efi=WC_EFI_GRUB  WC_BOOT_UUID
	else
	  search --no-floppy --fs-uuid --set=root WC_BOOT_UUID
	fi
	echo	'Loading Linux linux-lts ...'
	linux	/vmlinuz-linux-lts root=UUID=WC_SEC_ARCH_UUID rw loglevel=3
	echo	'Loading initial ramdisk ...'
	initrd	/initramfs-linux-lts.img
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/20_linux_xen ###
### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/25_bli ###
if [ "$grub_platform" = "efi" ]; then
  insmod bli
fi
### END /etc/grub.d/25_bli ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg
fi
### END /etc/grub.d/41_custom ###
